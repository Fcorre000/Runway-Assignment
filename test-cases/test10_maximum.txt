# Test Case 10: Maximum Complexity - All Edge Cases
# Purpose: Test all requirements simultaneously with edge cases
# Expected: System must handle all constraints correctly, avoid starvation and deadlock
#
# Format: aircraft_type arrival_delay runway_time

# Phase 1: Build up commercial traffic with long operations
0 0 20
0 1 18
0 1 22

# Cargo arrives - needs to wait for direction switch
1 1 25

# Emergency while cargo is waiting
2 1 8

# More commercial to test fairness after emergency
0 1 15
0 1 16

# Second emergency
2 1 7

# More cargo to force direction changes
1 1 20
1 1 18
1 1 19

# 11th aircraft - approaching controller break
0 2 12

# Emergency near break time
2 1 6

# More mixed traffic
1 1 22
0 1 20
1 1 18

# Controller break should happen here (16th aircraft)

# Rapid arrivals after break to test fuel emergencies
0 2 30
0 1 28
1 1 30
1 1 25
0 1 27
0 1 26
1 1 28
2 1 10

# Create potential fuel emergency scenario
# These aircraft will wait while long operations above complete
0 1 8
0 1 8
1 1 8
1 1 8
0 1 8
2 1 6

# Final complex sequence: direction switching + emergencies + potential break
0 2 15
0 1 14
0 1 13
2 1 7
1 1 20
1 1 18
2 1 8
0 1 16

# Test fairness - ensure cargo gets turn after many commercial
1 2 12

# Final aircraft to test system stability
0 3 10
1 2 10
2 2 8
